import json
from sklearn.externals import joblib
import sys
sys.path.append('../')
import modeling as mod
import gitfeatures as gf
import gitscraper as gs


class TestPrediction(object):
    """
    Test model prediction. 'Divide by zero encuontered in log10'
    warning expected.

    Note: The pickled files used for this example are not available
    online since pickled files generally aren't loadable across
    systems. Running 'python modeling.py' will generate the model,
    scaler and minvals, while the pickled repo files can be
    generated by running:
        python test_model.py <github user/github repo>
    """

    def test_classify(self):
        model = 'OC-SVM.pkl'
        scaler = 'scaler.pkl'
        minvals = 'minvals.pkl'
        pass_repo = 'GP_silburt_DeepMoon.pkl'
        fail_repo = 'GP_silburt_tau-ceti.pkl'
        GP_pass = joblib.load(pass_repo)
        GP_fail = joblib.load(fail_repo)
        pass_, _ = mod.classify_repo(GP_pass, model, scaler, minvals)
        fail_, _ = mod.classify_repo(GP_fail, model, scaler, minvals)
        assert pass_ == 1
        assert fail_ == -1


def pickle_repo(repo):
    """
    Basic function that scrapes repo data using the Github API and
    saves it locally as a pickled file, to be used by test_classify()
    above.
    """
    GP = gs.Github_Profile()
    url = 'https://api.github.com/repos/%s' % repo
    repo_path = 'GP_%s.pkl' % (repo.replace('/', '_'))
    r = gf.get_request(url)
    if r.ok:
        item = json.loads(r.text or r.content)
        gs.get_features(item, GP)
        joblib.dump(GP, repo_path)


if __name__ == '__main__':
    repo = sys.argv[1]
    pickle_repo(repo)
